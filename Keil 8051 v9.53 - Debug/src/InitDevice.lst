C51 COMPILER V9.53.0.0   INITDEVICE                                                        08/16/2017 15:51:47 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\derek\S
                    -implicityStudio\v4_workspace\BlinkyGlasses\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLO
                    -ATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\derek\SimplicityStudio\v4_work
                    -space\BlinkyGlasses\inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.6//Device/shared/si8051base;C:/Silic
                    -onLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.6//Device/EFM8BB1/inc) PRINT(.\src\InitDevice.lst) COND PAGEWIDTH(12
                    -0) PAGELENGTH(65) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB1_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void enter_DefaultMode_from_RESET(void) {
  23   1              // $[Config Calls]
  24   1              WDT_0_enter_DefaultMode_from_RESET();
  25   1              PORTS_0_enter_DefaultMode_from_RESET();
  26   1              PORTS_1_enter_DefaultMode_from_RESET();
  27   1              PBCFG_0_enter_DefaultMode_from_RESET();
  28   1              ADC_0_enter_DefaultMode_from_RESET();
  29   1              VREF_0_enter_DefaultMode_from_RESET();
  30   1              TIMER01_0_enter_DefaultMode_from_RESET();
  31   1              TIMER16_2_enter_DefaultMode_from_RESET();
  32   1              TIMER_SETUP_0_enter_DefaultMode_from_RESET();
  33   1              INTERRUPT_0_enter_DefaultMode_from_RESET();
  34   1              // [Config Calls]$
  35   1      
  36   1      }
  37          
  38          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
  39   1      
  40   1              // $[XBR2 - Port I/O Crossbar 2]
  41   1              /***********************************************************************
  42   1               - Weak Pullups enabled 
  43   1               - Crossbar enabled
  44   1               ***********************************************************************/
  45   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED;
  46   1              // [XBR2 - Port I/O Crossbar 2]$
  47   1      
  48   1              // $[PRTDRV - Port Drive Strength]
  49   1              // [PRTDRV - Port Drive Strength]$
  50   1      
  51   1              // $[XBR0 - Port I/O Crossbar 0]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        08/16/2017 15:51:47 PAGE 2   

  52   1              // [XBR0 - Port I/O Crossbar 0]$
  53   1      
  54   1              // $[XBR1 - Port I/O Crossbar 1]
  55   1              // [XBR1 - Port I/O Crossbar 1]$
  56   1      
  57   1      }
  58          
  59          extern void WDT_0_enter_DefaultMode_from_RESET(void) {
  60   1              // $[WDTCN - Watchdog Timer Control]
  61   1              //Disable Watchdog with key sequence
  62   1              WDTCN = 0xDE; //First key
  63   1              WDTCN = 0xAD; //Second key
  64   1              // [WDTCN - Watchdog Timer Control]$
  65   1      
  66   1      }
  67          
  68          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
  69   1              // $[P0 - Port 0 Pin Latch]
  70   1              // [P0 - Port 0 Pin Latch]$
  71   1      
  72   1              // $[P0MDOUT - Port 0 Output Mode]
  73   1              /***********************************************************************
  74   1               - P0.0 output is push-pull
  75   1               - P0.1 output is open-drain
  76   1               - P0.2 output is open-drain
  77   1               - P0.3 output is open-drain
  78   1               - P0.4 output is open-drain
  79   1               - P0.5 output is open-drain
  80   1               - P0.6 output is open-drain
  81   1               - P0.7 output is open-drain
  82   1               ***********************************************************************/
  83   1              P0MDOUT = P0MDOUT_B0__PUSH_PULL | P0MDOUT_B1__OPEN_DRAIN
  84   1                              | P0MDOUT_B2__OPEN_DRAIN | P0MDOUT_B3__OPEN_DRAIN
  85   1                              | P0MDOUT_B4__OPEN_DRAIN | P0MDOUT_B5__OPEN_DRAIN
  86   1                              | P0MDOUT_B6__OPEN_DRAIN | P0MDOUT_B7__OPEN_DRAIN;
  87   1              // [P0MDOUT - Port 0 Output Mode]$
  88   1      
  89   1              // $[P0MDIN - Port 0 Input Mode]
  90   1              /***********************************************************************
  91   1               - P0.0 pin is configured for digital mode
  92   1               - P0.1 pin is configured for analog mode
  93   1               - P0.2 pin is configured for digital mode
  94   1               - P0.3 pin is configured for digital mode
  95   1               - P0.4 pin is configured for digital mode
  96   1               - P0.5 pin is configured for digital mode
  97   1               - P0.6 pin is configured for digital mode
  98   1               - P0.7 pin is configured for digital mode
  99   1               ***********************************************************************/
 100   1              P0MDIN = P0MDIN_B0__DIGITAL | P0MDIN_B1__ANALOG | P0MDIN_B2__DIGITAL
 101   1                              | P0MDIN_B3__DIGITAL | P0MDIN_B4__DIGITAL | P0MDIN_B5__DIGITAL
 102   1                              | P0MDIN_B6__DIGITAL | P0MDIN_B7__DIGITAL;
 103   1              // [P0MDIN - Port 0 Input Mode]$
 104   1      
 105   1              // $[P0SKIP - Port 0 Skip]
 106   1              /***********************************************************************
 107   1               - P0.0 pin is not skipped by the crossbar
 108   1               - P0.1 pin is skipped by the crossbar
 109   1               - P0.2 pin is not skipped by the crossbar
 110   1               - P0.3 pin is not skipped by the crossbar
 111   1               - P0.4 pin is not skipped by the crossbar
 112   1               - P0.5 pin is not skipped by the crossbar
 113   1               - P0.6 pin is not skipped by the crossbar
 114   1               - P0.7 pin is not skipped by the crossbar
C51 COMPILER V9.53.0.0   INITDEVICE                                                        08/16/2017 15:51:47 PAGE 3   

 115   1               ***********************************************************************/
 116   1              P0SKIP = P0SKIP_B0__NOT_SKIPPED | P0SKIP_B1__SKIPPED
 117   1                              | P0SKIP_B2__NOT_SKIPPED | P0SKIP_B3__NOT_SKIPPED
 118   1                              | P0SKIP_B4__NOT_SKIPPED | P0SKIP_B5__NOT_SKIPPED
 119   1                              | P0SKIP_B6__NOT_SKIPPED | P0SKIP_B7__NOT_SKIPPED;
 120   1              // [P0SKIP - Port 0 Skip]$
 121   1      
 122   1              // $[P0MASK - Port 0 Mask]
 123   1              // [P0MASK - Port 0 Mask]$
 124   1      
 125   1              // $[P0MAT - Port 0 Match]
 126   1              // [P0MAT - Port 0 Match]$
 127   1      
 128   1      }
 129          
 130          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
 131   1              // $[P1 - Port 1 Pin Latch]
 132   1              // [P1 - Port 1 Pin Latch]$
 133   1      
 134   1              // $[P1MDOUT - Port 1 Output Mode]
 135   1              /***********************************************************************
 136   1               - P1.0 output is push-pull
 137   1               - P1.1 output is push-pull
 138   1               - P1.2 output is open-drain
 139   1               - P1.3 output is open-drain
 140   1               - P1.4 output is open-drain
 141   1               - P1.5 output is open-drain
 142   1               - P1.6 output is open-drain
 143   1               ***********************************************************************/
 144   1              P1MDOUT = P1MDOUT_B0__PUSH_PULL | P1MDOUT_B1__PUSH_PULL
 145   1                              | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN
 146   1                              | P1MDOUT_B4__OPEN_DRAIN | P1MDOUT_B5__OPEN_DRAIN
 147   1                              | P1MDOUT_B6__OPEN_DRAIN;
 148   1              // [P1MDOUT - Port 1 Output Mode]$
 149   1      
 150   1              // $[P1MDIN - Port 1 Input Mode]
 151   1              // [P1MDIN - Port 1 Input Mode]$
 152   1      
 153   1              // $[P1SKIP - Port 1 Skip]
 154   1              // [P1SKIP - Port 1 Skip]$
 155   1      
 156   1              // $[P1MASK - Port 1 Mask]
 157   1              // [P1MASK - Port 1 Mask]$
 158   1      
 159   1              // $[P1MAT - Port 1 Match]
 160   1              // [P1MAT - Port 1 Match]$
 161   1      
 162   1      }
 163          
 164          extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void) {
 165   1              // $[CKCON0 - Clock Control 0]
 166   1              /***********************************************************************
 167   1               - System clock divided by 4
 168   1               - Counter/Timer 0 uses the system clock
 169   1               - Timer 2 high byte uses the clock defined by T2XCLK in TMR2CN0
 170   1               - Timer 2 low byte uses the clock defined by T2XCLK in TMR2CN0
 171   1               - Timer 3 high byte uses the clock defined by T3XCLK in TMR3CN0
 172   1               - Timer 3 low byte uses the clock defined by T3XCLK in TMR3CN0
 173   1               - Timer 1 uses the system clock
 174   1               ***********************************************************************/
 175   1              CKCON0 = CKCON0_SCA__SYSCLK_DIV_4 | CKCON0_T0M__SYSCLK
 176   1                              | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__EXTERNAL_CLOCK
 177   1                              | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
C51 COMPILER V9.53.0.0   INITDEVICE                                                        08/16/2017 15:51:47 PAGE 4   

 178   1                              | CKCON0_T1M__SYSCLK;
 179   1              // [CKCON0 - Clock Control 0]$
 180   1      
 181   1              // $[TMOD - Timer 0/1 Mode]
 182   1              /***********************************************************************
 183   1               - Mode 1, 16-bit Counter/Timer
 184   1               - Mode 0, 13-bit Counter/Timer
 185   1               - Timer Mode
 186   1               - Timer 0 enabled when TR0 = 1 irrespective of INT0 logic level
 187   1               - Timer Mode
 188   1               - Timer 1 enabled when TR1 = 1 irrespective of INT1 logic level
 189   1               ***********************************************************************/
 190   1              TMOD = TMOD_T0M__MODE1 | TMOD_T1M__MODE0 | TMOD_CT0__TIMER
 191   1                              | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 192   1              // [TMOD - Timer 0/1 Mode]$
 193   1      
 194   1              // $[TCON - Timer 0/1 Control]
 195   1              /***********************************************************************
 196   1               - Start Timer 0 running
 197   1               ***********************************************************************/
 198   1              TCON |= TCON_TR0__RUN;
 199   1              // [TCON - Timer 0/1 Control]$
 200   1      
 201   1      }
 202          
 203          extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void) {
 204   1              // $[EIE1 - Extended Interrupt Enable 1]
 205   1              /***********************************************************************
 206   1               - Enable interrupt requests generated by the ADINT flag
 207   1               - Disable ADC0 Window Comparison interrupt
 208   1               - Disable CP0 interrupts
 209   1               - Disable CP1 interrupts
 210   1               - Disable all Port Match interrupts
 211   1               - Disable all PCA0 interrupts
 212   1               - Disable all SMB0 interrupts
 213   1               - Disable Timer 3 interrupts
 214   1               ***********************************************************************/
 215   1              EIE1 = EIE1_EADC0__ENABLED | EIE1_EWADC0__DISABLED | EIE1_ECP0__DISABLED
 216   1                              | EIE1_ECP1__DISABLED | EIE1_EMAT__DISABLED | EIE1_EPCA0__DISABLED
 217   1                              | EIE1_ESMB0__DISABLED | EIE1_ET3__DISABLED;
 218   1              // [EIE1 - Extended Interrupt Enable 1]$
 219   1      
 220   1              // $[EIP1 - Extended Interrupt Priority 1]
 221   1              // [EIP1 - Extended Interrupt Priority 1]$
 222   1      
 223   1              // $[IE - Interrupt Enable]
 224   1              /***********************************************************************
 225   1               - Enable each interrupt according to its individual mask setting
 226   1               - Disable external interrupt 0
 227   1               - Disable external interrupt 1
 228   1               - Disable all SPI0 interrupts
 229   1               - Enable interrupt requests generated by the TF0 flag
 230   1               - Disable all Timer 1 interrupt
 231   1               - Disable Timer 2 interrupt
 232   1               - Disable UART0 interrupt
 233   1               ***********************************************************************/
 234   1              IE = IE_EA__ENABLED | IE_EX0__DISABLED | IE_EX1__DISABLED
 235   1                              | IE_ESPI0__DISABLED | IE_ET0__ENABLED | IE_ET1__DISABLED
 236   1                              | IE_ET2__DISABLED | IE_ES0__DISABLED;
 237   1              // [IE - Interrupt Enable]$
 238   1      
 239   1              // $[IP - Interrupt Priority]
 240   1              // [IP - Interrupt Priority]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        08/16/2017 15:51:47 PAGE 5   

 241   1      
 242   1      }
 243          
 244          extern void TIMER01_0_enter_DefaultMode_from_RESET(void) {
 245   1              // $[Timer Initialization]
 246   1              //Save Timer Configuration
 247   1              uint8_t TCON_save;
 248   1              TCON_save = TCON;
 249   1              //Stop Timers
 250   1              TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 251   1      
 252   1              // [Timer Initialization]$
 253   1      
 254   1              // $[TH0 - Timer 0 High Byte]
 255   1              /***********************************************************************
 256   1               - Timer 0 High Byte = 0xFF
 257   1               ***********************************************************************/
 258   1              TH0 = (0xFF << TH0_TH0__SHIFT);
 259   1              // [TH0 - Timer 0 High Byte]$
 260   1      
 261   1              // $[TL0 - Timer 0 Low Byte]
 262   1              /***********************************************************************
 263   1               - Timer 0 Low Byte = 0xFF
 264   1               ***********************************************************************/
 265   1              TL0 = (0xFF << TL0_TL0__SHIFT);
 266   1              // [TL0 - Timer 0 Low Byte]$
 267   1      
 268   1              // $[TH1 - Timer 1 High Byte]
 269   1              /***********************************************************************
 270   1               - Timer 1 High Byte = 0x9C
 271   1               ***********************************************************************/
 272   1              TH1 = (0x9C << TH1_TH1__SHIFT);
 273   1              // [TH1 - Timer 1 High Byte]$
 274   1      
 275   1              // $[TL1 - Timer 1 Low Byte]
 276   1              /***********************************************************************
 277   1               - Timer 1 Low Byte = 0x08
 278   1               ***********************************************************************/
 279   1              TL1 = (0x08 << TL1_TL1__SHIFT);
 280   1              // [TL1 - Timer 1 Low Byte]$
 281   1      
 282   1              // $[Timer Restoration]
 283   1              //Restore Timer Configuration
 284   1              TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 285   1      
 286   1              // [Timer Restoration]$
 287   1      
 288   1      }
 289          
 290          extern void ADC_0_enter_DefaultMode_from_RESET(void) {
 291   1              // $[ADC0CN1 - ADC0 Control 1]
 292   1              // [ADC0CN1 - ADC0 Control 1]$
 293   1      
 294   1              // $[ADC0MX - ADC0 Multiplexer Selection]
 295   1              /***********************************************************************
 296   1               - Select ADC0.1
 297   1               ***********************************************************************/
 298   1              ADC0MX = ADC0MX_ADC0MX__ADC0P1;
 299   1              // [ADC0MX - ADC0 Multiplexer Selection]$
 300   1      
 301   1              // $[ADC0CF - ADC0 Configuration]
 302   1              /***********************************************************************
 303   1               - SAR Clock Divider = 0x1F
C51 COMPILER V9.53.0.0   INITDEVICE                                                        08/16/2017 15:51:47 PAGE 6   

 304   1               - ADC0 operates in 10-bit or 12-bit mode 
 305   1               - The on-chip PGA gain is 1
 306   1               - Normal Track Mode
 307   1               ***********************************************************************/
 308   1              ADC0CF = (0x1F << ADC0CF_ADSC__SHIFT) | ADC0CF_AD8BE__NORMAL
 309   1                              | ADC0CF_ADGN__GAIN_1 | ADC0CF_ADTM__TRACK_NORMAL;
 310   1              // [ADC0CF - ADC0 Configuration]$
 311   1      
 312   1              // $[ADC0AC - ADC0 Accumulator Configuration]
 313   1              // [ADC0AC - ADC0 Accumulator Configuration]$
 314   1      
 315   1              // $[ADC0TK - ADC0 Burst Mode Track Time]
 316   1              // [ADC0TK - ADC0 Burst Mode Track Time]$
 317   1      
 318   1              // $[ADC0PWR - ADC0 Power Control]
 319   1              // [ADC0PWR - ADC0 Power Control]$
 320   1      
 321   1              // $[ADC0GTH - ADC0 Greater-Than High Byte]
 322   1              // [ADC0GTH - ADC0 Greater-Than High Byte]$
 323   1      
 324   1              // $[ADC0GTL - ADC0 Greater-Than Low Byte]
 325   1              // [ADC0GTL - ADC0 Greater-Than Low Byte]$
 326   1      
 327   1              // $[ADC0LTH - ADC0 Less-Than High Byte]
 328   1              // [ADC0LTH - ADC0 Less-Than High Byte]$
 329   1      
 330   1              // $[ADC0LTL - ADC0 Less-Than Low Byte]
 331   1              // [ADC0LTL - ADC0 Less-Than Low Byte]$
 332   1      
 333   1              // $[ADC0CN0 - ADC0 Control 0]
 334   1              /***********************************************************************
 335   1               - Enable ADC0 
 336   1               - ADC0 conversion initiated on overflow of Timer 0
 337   1               ***********************************************************************/
 338   1              ADC0CN0 &= ~ADC0CN0_ADCM__FMASK;
 339   1              ADC0CN0 |= ADC0CN0_ADEN__ENABLED | ADC0CN0_ADCM__TIMER0;
 340   1              // [ADC0CN0 - ADC0 Control 0]$
 341   1      
 342   1      }
 343          
 344          extern void TIMER16_2_enter_DefaultMode_from_RESET(void) {
 345   1              // $[Timer Initialization]
 346   1              // Save Timer Configuration
 347   1              uint8_t TMR2CN0_TR2_save;
 348   1              TMR2CN0_TR2_save = TMR2CN0 & TMR2CN0_TR2__BMASK;
 349   1              // Stop Timer
 350   1              TMR2CN0 &= ~(TMR2CN0_TR2__BMASK);
 351   1              // [Timer Initialization]$
 352   1      
 353   1              // $[TMR2CN0 - Timer 2 Control]
 354   1              // [TMR2CN0 - Timer 2 Control]$
 355   1      
 356   1              // $[TMR2H - Timer 2 High Byte]
 357   1              // [TMR2H - Timer 2 High Byte]$
 358   1      
 359   1              // $[TMR2L - Timer 2 Low Byte]
 360   1              // [TMR2L - Timer 2 Low Byte]$
 361   1      
 362   1              // $[TMR2RLH - Timer 2 Reload High Byte]
 363   1              /***********************************************************************
 364   1               - Timer 2 Reload High Byte = 0xF6
 365   1               ***********************************************************************/
 366   1              TMR2RLH = (0xF6 << TMR2RLH_TMR2RLH__SHIFT);
C51 COMPILER V9.53.0.0   INITDEVICE                                                        08/16/2017 15:51:47 PAGE 7   

 367   1              // [TMR2RLH - Timer 2 Reload High Byte]$
 368   1      
 369   1              // $[TMR2RLL - Timer 2 Reload Low Byte]
 370   1              /***********************************************************************
 371   1               - Timer 2 Reload Low Byte = 0x08
 372   1               ***********************************************************************/
 373   1              TMR2RLL = (0x08 << TMR2RLL_TMR2RLL__SHIFT);
 374   1              // [TMR2RLL - Timer 2 Reload Low Byte]$
 375   1      
 376   1              // $[TMR2CN0]
 377   1              /***********************************************************************
 378   1               - Start Timer 2 running
 379   1               ***********************************************************************/
 380   1              TMR2CN0 |= TMR2CN0_TR2__RUN;
 381   1              // [TMR2CN0]$
 382   1      
 383   1              // $[Timer Restoration]
 384   1              // Restore Timer Configuration
 385   1              TMR2CN0 |= TMR2CN0_TR2_save;
 386   1              // [Timer Restoration]$
 387   1      
 388   1      }
 389          
 390          extern void VREF_0_enter_DefaultMode_from_RESET(void) {
 391   1              // $[REF0CN - Voltage Reference Control]
 392   1              /***********************************************************************
 393   1               - Disable the Temperature Sensor
 394   1               - The ADC0 ground reference is the GND pin
 395   1               - The internal reference operates at 1.65 V nominal
 396   1               - The ADC0 voltage reference is the VDD pin
 397   1               ***********************************************************************/
 398   1              REF0CN = REF0CN_TEMPE__TEMP_DISABLED | REF0CN_GNDSL__GND_PIN
 399   1                              | REF0CN_IREFLVL__1P65 | REF0CN_REFSL__VDD_PIN;
 400   1              // [REF0CN - Voltage Reference Control]$
 401   1      
 402   1      }
 403          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    136    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
